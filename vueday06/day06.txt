全局 API
  1.Vue.extend 扩展实例构造器方法
    Vue.extend({
      options
    })
    参数是一个对象,选项和组件中的是同样的。data必须是函数形式
  2.Vue.set()
      作用：就是在构造器外部操作内部的数据，属性和方法
      问题：由于JS的限制，当你改变的 数据类型是数组时
      Vue不会帮我们自动更新视图
      当你修改数组的length是，vue也不会触发响应式

  Vue-cli
  Vue-cli是官方提供的用于快速构建项目的解构的脚手架工具
  它会自动生成Vue项目的目录以及相关文件
  1.安装
      cnpm install vue-cli -g
  2.初始化项目
    (1) vue init <template-name>      <project-name>
                  webpack(当成模版)     项目名称
    (2) 设置选项
        1.project name：项目名称：小写
        2.project description ：项目描述
        3.Auther :作者
        4.install vue-router  ：是否安装 router
        5.Use ESLint to lint youer code : Y/N
        6.setup unit tests width Karma + Mocha:
            是否安装单元测试工具

    (3) Get Start 启动项目 

3.src 源码目录文件 
    assets      : 静态资源
      包含图片，web字体，json数据....
    components  : 放公共组件的(主要的组件代码)
    router      : 路由配置文件
    App.vue     : 根组件
      在项目中我们都是用， .vue 文件表示一个组件(vue实例)
      一个vue文件，包含三个部分：template，script，style
      template  : 在模版中必须要设置一个父元素
      script    : 这里面可以写vue的逻辑，我们使用ES6的语法来写的使用 export default 来导出一个模块
      style     : 默认的作用域范围是全局下的 如果只需要作用于当前组件，<style scoped>
    mian.js     : 入口JS文件，主文件 

- Vue-cli 3 版本的安装
   1. cnpm i @vue/cli -g 全局安装
   2. 初始化项目
        (1) vue create project-name
        (2) vue un
          cnpm 的报错解决：
            执行 npm cache clean --force

