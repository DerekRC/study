vue的选项
1.选项就是在 vue 构造器中配置功能的前缀(vue已经帮我们定义好了)。
  vue的选项有很多，比如：el,data,methods,template(模版)。。。

  1.template 模版
    模版的定义：3种方式
    (1) 直接写在选项模版中
    (2) 写在template标签的模版，必须要有根节点
    (3) 写在 script 标签中的模版，不能跨文件引用
    模版声明；了数据最终展现给用户的DOM之间的映射关系
      data => DOM 

  2.computed 计算属性
    当依赖的属性值发送变化是，会触发属性的重新计算(自动),
    数据或属性值没有发生变化，更新视图计算属性方法不会触发
    重新计算，还是计算之前的值
    何时使用：当数据需要被处理之后再去使用的时候，就可以用computed计算方法
    这样可以节省性能
  
  3.watch 监听数据的变化
    观察者模式，数据发生变化，执行对应的逻辑
  
  4.生命周期(钩子函数)
    Vue 实例 有一个完整的生命周期，就是从实例开始创建，
    到初始化数据，然后编译模版，再到挂载 DOM 再到渲染，更新 DOM
    继续渲染，然后到卸载实例等一系列过程我们称之为 Vue 的生命周期
    简单来说就是 Vue 实例从创建到销毁的过程

  在 Vue 生命周期中 提供了一些钩子函数，就是给了我们执行自定义逻辑的机会 总8个
   1.beforeCreate   - 创建前
   2.created        - 创建后 **最最最最最常用的钩子方法
   3.beforeMount    - 挂载前
   4.mounted        - 挂载后**比较比较常用的
   5.beforeUpdated  - 数据变化前
   6.update         - 变化后
   7.beforeDestroy  - 销毁前
   8.destroy        - 销毁后

  Vue 的组件 component
  1.组件是 vue 中最强大的功能之一。 可以说vue的开发就是组件的开发。
    html + JS + CSS 分开，降低耦合度
    react   css in JS  html in JS
    Vue     template script   style
              模板     脚本    样式
  2.组件其实就是可复用的Vue实例，并且有一个自己的名字
    制作组件其实就是制作自定义的标签，标签名要符合W3C规范
  3.注册组件：全局注册 和 局部注册
    （1）全局注册组件
          就是在构造器外部使用的全局API，Vue。component 来注册
    （2）局部注册组件
        在 Vue 构造器内部注册，只能在内部使用，不能全局使用

  4.组件中的选项
    组件也是一个 Vue 实例，它里面也可以有 Vue 实例上的选项的、
    比如：data,method,template.....,除了el
  
  5.组件中使用指令和事件
  
  6.父子组件
    在实际开发中我们经常会遇到在自定义组件中在嵌套一个组件
    这就是组件之间的嵌套被称为  父子组件





